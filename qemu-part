#!/bin/sh
#
# show partition table of qemu image file
#

prog=`basename $0`

# use sudo for unprivileged users
SUDO=
[ "$(id -u)" -ne 0 ] && SUDO=sudo

# print error message
error() {
	echo $prog: "$@" 2>&1
	exit 1
}

# print usage
usage() {
	if [ $# -ge 1 ]; then
		[ -n "$*" ] && echo $prog: "$@" 2>&1
		echo 2>&1
	fi
	cat << EOF >&2
Show partition table of qemu image file

Usage: $prog qemu_image
EOF
	exit 1
}

[ $# -ne 1 ] && usage "wrong number of arguments"
image="$1"

[ -e "$image" ] || error "$image: no such file"
[ -f "$image" ] || error "$image must be a regular file"
img_fmt=`qemu-img info "$image" | sed -n 's/^file format: \(.*\)/\1/p'`
[ -n "$img_fmt" ] || error "$image has unknown format"

# load kernel module, check if sudo works
$SUDO modprobe nbd || exit $?

# lock
(
	flock -w 5 9 || error "Can't get mount lock"
	chmod a+rw /var/lock/qemu-mount.lock 2> /dev/null

	# find free nbd device
	nbd_size=1
	for nbd in /sys/class/block/nbd*; do
		nbd_size=`cat ${nbd}/size`
		[ $nbd_size -gt 0 ] || break
	done
	[ $nbd_size -gt 0 ]  && error "no free nbd devices"
	nbd=`basename $nbd`

	# qemu-nbd
	$SUDO qemu-nbd -c "/dev/$nbd" -f "$img_fmt" "$image" || exit

	# show partition table
	$SUDO fdisk -l "/dev/$nbd"
	ret=$?
	$SUDO qemu-nbd -d "/dev/$nbd" > /dev/null 2>&1
	exit $ret
) 9>> /var/lock/qemu-mount.lock
